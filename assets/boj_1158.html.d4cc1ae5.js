import{_ as o,r as a,o as c,c as l,a as n,b as t,w as u,F as r,d as s,e as i}from"./app.ab7b14ba.js";const k={},d={id:"\u110B\u116D\u1109\u1166\u1111\u116E\u1109\u1173-\u1106\u116E\u11AB\u110C\u1166",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#\u110B\u116D\u1109\u1166\u1111\u116E\u1109\u1173-\u1106\u116E\u11AB\u110C\u1166","aria-hidden":"true"},"#",-1),m=s(),_={href:"https://www.acmicpc.net/problem/1158",target:"_blank",rel:"noopener noreferrer"},h=s("\uC694\uC138\uD478\uC2A4 \uBB38\uC81C"),w=s("\uC5F0\uACB0 \uB9AC\uC2A4\uD2B8\uB85C \uD47C \uD480\uC774\uACFC\uC815\uC740 "),y=s("\uC774 \uB9C1\uD06C"),f=s("\uC5D0\uC11C \uD655\uC778\uD560 \uC218 \uC788\uB2E4. "),q=n("br",null,null,-1),g=i(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> sys
<span class="token keyword">from</span> collections <span class="token keyword">import</span> deque

<span class="token keyword">def</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">#  N\uBA85\uC758 \uC0AC\uB78C\uC774 \uC6D0\uC744 \uC774\uB8E8\uBA74\uC11C \uC549\uC544\uC788\uACE0, K\uBC88\uC9F8 \uC0AC\uB78C\uC744 \uC81C\uAC70</span>
n<span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
dq <span class="token operator">=</span> deque<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
answer <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">while</span> dq<span class="token punctuation">:</span>
  dq<span class="token punctuation">.</span>rotate<span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  answer<span class="token punctuation">.</span>append<span class="token punctuation">(</span>dq<span class="token punctuation">.</span>popleft<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;&quot;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> answer<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>answer<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,1);function x(v,N){const p=a("ExternalLinkIcon"),e=a("RouterLink");return c(),l(r,null,[n("h1",d,[b,m,n("a",_,[h,t(p)])]),n("p",null,[w,t(e,{to:"/byeolhee/datastructure/linkedlist/boj_1158.html"},{default:u(()=>[y]),_:1}),f,q]),g],64)}var V=o(k,[["render",x],["__file","boj_1158.html.vue"]]);export{V as default};
