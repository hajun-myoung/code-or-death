import{_ as n,e as s}from"./app.ab7b14ba.js";const a={},t=s(`<h1 id="_1-two-sum" tabindex="-1"><a class="header-anchor" href="#_1-two-sum" aria-hidden="true">#</a> 1. Two Sum</h1><blockquote><p>\uC790\uB8CC\uAD6C\uC870(\uBC30\uC5F4, \uD574\uC2DC\uD14C\uC774\uBE14)</p></blockquote><h2 id="\u{1F4CB}-\u1106\u116E\u11AB\u110C\u1166" tabindex="-1"><a class="header-anchor" href="#\u{1F4CB}-\u1106\u116E\u11AB\u110C\u1166" aria-hidden="true">#</a> \u{1F4CB} \uBB38\uC81C</h2><p>Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.<br> You may assume that each input would have exactly one solution, and you may not use the same element twice.<br> You can return the answer in any order.</p><h2 id="\u{1F449}-\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8" tabindex="-1"><a class="header-anchor" href="#\u{1F449}-\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8" aria-hidden="true">#</a> \u{1F449} \uC785\uCD9C\uB825</h2><p><strong>Example 1:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>Example 2:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: nums = [3,2,4], target = 6
Output: [1,2]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>Example 3:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: nums = [3,3], target = 6
Output: [0,1]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u{1F4DD}-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u{1F4DD}-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \u{1F4DD} \uD480\uC774</h2><h3 id="\u2714\uFE0F-\u110E\u1165\u11BA-\u1107\u1165\u11AB\u110D\u1162-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u2714\uFE0F-\u110E\u1165\u11BA-\u1107\u1165\u11AB\u110D\u1162-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \u2714\uFE0F \uCCAB \uBC88\uC9F8 \uD480\uC774</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">twoSum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">:</span>
                    <span class="token keyword">return</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\uBE0C\uB8E8\uD2B8\uD3EC\uC2A4\uB85C \uD47C \uD480\uC774\uC774\uB2E4.</p><h3 id="\u2714\uFE0F-\u1103\u116E-\u1107\u1165\u11AB\u110D\u1162-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u2714\uFE0F-\u1103\u116E-\u1107\u1165\u11AB\u110D\u1162-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \u2714\uFE0F \uB450 \uBC88\uC9F8 \uD480\uC774</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">twoSum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        hashmap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            temp <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token keyword">if</span> temp <span class="token keyword">in</span> hashmap<span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span> hashmap<span class="token punctuation">[</span>temp<span class="token punctuation">]</span><span class="token punctuation">]</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                hashmap<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> i
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\uD574\uC2DC\uB9F5\uC744 \uC4F4 \uC608\uC81C\uC774\uB2E4.<br> \uBE0C\uB8E8\uD2B8\uD3EC\uC2A4\uB85C \uD480\uBA74 O(n^2)\uC778 \uBC18\uBA74 \uD574\uC2DC\uB9F5\uC744 \uC0AC\uC6A9\uD558\uBA74 O(n)\uC73C\uB85C \uC904\uC77C \uC218 \uC788\uB2E4.</p><p>\uD574\uC2DC\uB9F5\uC73C\uB85C \uC4F8 \uBE48 \uB515\uC154\uB108\uB9AC\uB97C \uD558\uB098 \uC120\uC5B8\uD558\uACE0 for\uBB38\uC73C\uB85C nums\uC758 \uC694\uC18C\uB4E4\uC744 \uC21C\uD68C\uD55C\uB2E4.<br> temp\uC5D0 target - nums[i], \uADF8\uB7EC\uB2C8\uAE4C \uD604\uC7AC \uC0B4\uD3B4\uBCF4\uACE0 \uC788\uB294 \uC694\uC18C\uC778 nums[i]\uC640 \uB354\uD574\uC11C target\uC774 \uB420 \uC218 \uC788\uB294 \uC694\uC18C\uAC00 hashmap\uC5D0 \uC788\uB294\uC9C0 \uC0B4\uD540\uB2E4.<br> \uCC3E\uACE0\uC790 \uD558\uB294 \uC694\uC18C\uAC00 \uC5C6\uB2E4\uBA74 hashmap\uC5D0 key\uB294 \uC694\uC18C\uC758 \uAC12, value\uB294 \uC694\uC18C\uC758 \uC778\uB371\uC2A4\uB85C \uB123\uC5B4\uC900\uB2E4.<br> \uCC3E\uACE0\uC790 \uD558\uB294 \uC694\uC18C\uAC00 \uC788\uB2E4\uBA74 \uD604\uC7AC \uC778\uB371\uC2A4\uC778 i\uC640 \uC9DD\uC774 \uB418\uB294 \uC694\uC18C\uC758 \uC778\uB371\uC2A4\uB97C hashmap\uC5D0\uC11C \uCC3E\uC544 \uB9AC\uD134\uD55C\uB2E4.</p><p>\uBE0C\uB8E8\uD2B8\uD3EC\uC2A4\uC758 \uBC29\uBC95\uC73C\uB85C \uD480\uBA74 \uB7F0\uD0C0\uC784\uC774 3857ms\uC774\uACE0 \uD574\uC2DC\uB9F5\uC73C\uB85C \uD480\uBA74 57ms\uC774\uB2E4.</p>`,20);function p(e,o){return t}var u=n(a,[["render",p],["__file","lc_1.html.vue"]]);export{u as default};
