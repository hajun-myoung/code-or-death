import{_ as p,r as e,o as t,c as o,a as n,b as c,F as l,d as s,e as r}from"./app.ab7b14ba.js";const u={},i={id:"\u1103\u1161\u11AB\u110B\u1165\u1107\u1167\u11AB\u1112\u116A\u11AB",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#\u1103\u1161\u11AB\u110B\u1165\u1107\u1167\u11AB\u1112\u116A\u11AB","aria-hidden":"true"},"#",-1),b=s(),m={href:"https://programmers.co.kr/learn/courses/30/lessons/43163",target:"_blank",rel:"noopener noreferrer"},d=s("\uB2E8\uC5B4\uBCC0\uD658"),_=r(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> collections <span class="token keyword">import</span> deque
<span class="token comment"># \uD55C \uB2E8\uC5B4\uB9CC \uBCC0\uD658\uAC00\uB2A5</span>
<span class="token comment"># target\uC774 words \uB9AC\uC2A4\uD2B8 \uC548\uC5D0 \uC788\uC5B4\uC57C \uD568</span>
<span class="token comment"># \uBAA8\uB4E0 \uACBD\uB85C\uB97C \uD0D0\uC0C9\uD558\uACE0 \uADF8 \uC911 \uCD5C\uC18C \uD69F\uC218\uB97C \uBC18\uD658\uD574\uC57C\uD558\uBBC0\uB85C BFS</span>

<span class="token keyword">def</span> <span class="token function">solution</span><span class="token punctuation">(</span>begin<span class="token punctuation">,</span> target<span class="token punctuation">,</span> words<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> target <span class="token keyword">not</span> <span class="token keyword">in</span> words<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token number">0</span>

    queue <span class="token operator">=</span> deque<span class="token punctuation">(</span><span class="token punctuation">)</span>
    queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>begin<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># [\uB2E8\uC5B4, \uB2E8\uACC4\uD69F\uC218]</span>

    <span class="token keyword">while</span> queue<span class="token punctuation">:</span>
        temp<span class="token punctuation">,</span> cnt <span class="token operator">=</span> queue<span class="token punctuation">.</span>popleft<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> temp <span class="token operator">==</span> target<span class="token punctuation">:</span>
            <span class="token keyword">return</span> cnt

        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>words<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            diff <span class="token operator">=</span> <span class="token number">0</span>
            word <span class="token operator">=</span> words<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> temp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> word<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>
                    diff <span class="token operator">+=</span> <span class="token number">1</span>
            <span class="token keyword">if</span> diff <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
                queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>word<span class="token punctuation">,</span> cnt<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>`,1);function f(w,h){const a=e("ExternalLinkIcon");return t(),o(l,null,[n("h1",i,[k,b,n("a",m,[d,c(a)])]),_],64)}var g=p(u,[["render",f],["__file","pg_43163.html.vue"]]);export{g as default};
