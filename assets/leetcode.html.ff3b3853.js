import{_ as n,e as s}from"./app.ab7b14ba.js";const a={},e=s(`<h1 id="leetcode" tabindex="-1"><a class="header-anchor" href="#leetcode" aria-hidden="true">#</a> Leetcode</h1><p>Leetcode \uBB38\uC81C \uD480\uC774</p><h2 id="_2022-04-1\u110C\u116E\u110E\u1161" tabindex="-1"><a class="header-anchor" href="#_2022-04-1\u110C\u116E\u110E\u1161" aria-hidden="true">#</a> 2022.04 1\uC8FC\uCC28</h2><p>\u2757\uFE0F 720. Longest Word in Dictionary https://leetcode.com/problems/longest-word-in-dictionary/</p><ol start="9"><li><p>Palindrome Number https://leetcode.com/problems/palindrome-number/</p></li><li><p>Valid Palindrome https://leetcode.com/problems/valid-palindrome/</p></li><li><p>Assign Cookies https://leetcode.com/problems/assign-cookies/</p></li></ol><p>\u2757\uFE0F 11. Container With Most Water https://leetcode.com/problems/container-with-most-water/</p><h3 id="_9-palindrome-number" tabindex="-1"><a class="header-anchor" href="#_9-palindrome-number" aria-hidden="true">#</a> 9. Palindrome Number</h3><p>Given an integer x, return true if x is palindrome integer.</p><p>An integer is a palindrome when it reads the same backward as forward.</p><p>For example, 121 is a palindrome while 123 is not.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_125-valid-palindrome" tabindex="-1"><a class="header-anchor" href="#_125-valid-palindrome" aria-hidden="true">#</a> 125. Valid Palindrome</h3><p>A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.</p><p>Given a string s, return true if it is a palindrome, or false otherwise.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">:</span>
        s<span class="token operator">=</span>s<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> 
        <span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> c<span class="token punctuation">.</span>isalnum<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                s<span class="token operator">=</span>s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> s <span class="token operator">==</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,15);function t(p,o){return e}var l=n(a,[["render",t],["__file","leetcode.html.vue"]]);export{l as default};
