import{_ as n,e as s}from"./app.ab7b14ba.js";const a={},t=s(`<h1 id="_720-longest-word-in-dictionary" tabindex="-1"><a class="header-anchor" href="#_720-longest-word-in-dictionary" aria-hidden="true">#</a> 720. Longest Word in Dictionary</h1><blockquote><p>\uBB38\uC790\uC5F4</p></blockquote><h2 id="\u{1F4CB}-\u1106\u116E\u11AB\u110C\u1166" tabindex="-1"><a class="header-anchor" href="#\u{1F4CB}-\u1106\u116E\u11AB\u110C\u1166" aria-hidden="true">#</a> \u{1F4CB} \uBB38\uC81C</h2><p>Given an array of strings words representing an English Dictionary, return the longest word in words that can be built one character at a time by other words in words.</p><p>If there is more than one possible answer, return the longest word with the smallest lexicographical order.<br> If there is no answer, return the empty string.</p><h2 id="\u{1F449}-\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8" tabindex="-1"><a class="header-anchor" href="#\u{1F449}-\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8" aria-hidden="true">#</a> \u{1F449} \uC785\uCD9C\uB825</h2><p><strong>Example 1:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: words = [&quot;w&quot;,&quot;wo&quot;,&quot;wor&quot;,&quot;worl&quot;,&quot;world&quot;]
Output: &quot;world&quot;
Explanation: The word &quot;world&quot; can be built one character
at a time by &quot;w&quot;, &quot;wo&quot;, &quot;wor&quot;, and &quot;worl&quot;.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>Example 2:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: g = [1,2], s = [1,2,3]
Output: 2
Explanation: You have 2 children and 3 cookies.
The greed factors of 2 children are 1, 2.
You have 3 cookies and their sizes are big enough to gratify all of the children,
You need to output 2.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u{1F4DD}-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u{1F4DD}-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \u{1F4DD} \uD480\uC774</h2><h3 id="\u2714\uFE0F-\u110E\u1165\u11BA-\u1107\u1165\u11AB\u110D\u1162-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u2714\uFE0F-\u110E\u1165\u11BA-\u1107\u1165\u11AB\u110D\u1162-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \u2714\uFE0F \uCCAB \uBC88\uC9F8 \uD480\uC774</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">longestWord</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> words<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span>
        words<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
        temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">]</span>
        result <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>

        <span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>
            <span class="token keyword">if</span> word<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">in</span> temp<span class="token punctuation">:</span>
                temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>word<span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">:</span>
                    result <span class="token operator">=</span> word
        <span class="token keyword">return</span> result
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\uC815\uB2F5\uC740 \uC0AC\uC804\uC21C\uC73C\uB85C \uC791\uC740 \uAC83\uC744 \uCD9C\uB825\uD558\uB3C4\uB85D \uB418\uC5B4\uC788\uAE30 \uB54C\uBB38\uC5D0 \uBA3C\uC800 \uC785\uB825\uC73C\uB85C \uB4E4\uC5B4\uC628 words\uB97C \uC815\uB82C\uD55C\uB2E4.<br> temp\uB294 words\uC758 \uC694\uC18C\uB97C \uD655\uC778\uD558\uBA74\uC11C \uB2F4\uC744 \uC6A9\uB3C4\uC758 \uB9AC\uC2A4\uD2B8\uC774\uACE0 result\uB294 \uC815\uB2F5\uC744 \uC800\uC7A5\uD560 \uBB38\uC790\uC5F4\uC774\uB2E4.</p><p>for\uBB38\uC73C\uB85C words\uC758 \uC694\uC18C\uB4E4\uC744 \uC0B4\uD540\uB2E4.<br> \uC774\uB54C word\uC5D0\uC11C \uC81C\uC77C \uB9C8\uC9C0\uB9C9 \uBB38\uC790\uB97C \uC81C\uAC70\uD55C \uBB38\uC790\uC5F4\uC774 temp\uC5D0 \uC788\uB2E4\uBA74 temp\uC5D0 word\uB97C \uB123\uC5B4\uC900\uB2E4.<br> \uC608\uB97C \uB4E4\uC5B4 <code>word=&quot;wo&quot;, temp = [&quot;&quot;, &quot;w&quot;]</code>\uC778 \uACBD\uC6B0\uC774\uB2E4.<br> \uC774\uCC98\uB7FC \uC5F0\uC18D\uC801\uC73C\uB85C \uC774\uC5B4\uC9C0\uB294 \uBB38\uC790\uB4E4\uC774 temp\uC5D0 \uC874\uC7AC\uD558\uB294 \uACBD\uC6B0\uC5D0\uB9CC temp\uC5D0 word\uB97C \uB123\uC5B4\uC8FC\uB294 \uAC83\uC774\uB2E4.</p><p>\uADF8\uB9AC\uACE0 \uC774\uC911 \uC81C\uC77C \uAE34 \uB2E8\uC5B4\uB97C \uCD9C\uB825\uD558\uAE30 \uC704\uD574 result\uC640 word\uC758 \uAE38\uC774\uB97C \uBE44\uAD50\uD55C\uB2E4.<br> \uB9CC\uC57D result\uC758 \uAE38\uC774\uBCF4\uB2E4 word\uC758 \uAE38\uC774\uAC00 \uAE38\uB2E4\uBA74 result\uC758 \uAC12\uC744 word\uB85C \uBC14\uAFD4\uC900\uB2E4.<br> \uC774 \uACFC\uC815\uC744 \uAC70\uCCD0\uC57C word\uC758 \uAE38\uC774\uAC00 \uAC19\uC740 \uACBD\uC6B0 \uC0AC\uC804\uC21C\uC73C\uB85C \uC791\uC740 \uAC83\uC744 \uB2F5\uC73C\uB85C \uCD9C\uB825\uD560 \uC218 \uC788\uB2E4.</p><h3 id="\u2714\uFE0F-\u1103\u116E-\u1107\u1165\u11AB\u110D\u1162-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u2714\uFE0F-\u1103\u116E-\u1107\u1165\u11AB\u110D\u1162-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \u2714\uFE0F \uB450 \uBC88\uC9F8 \uD480\uC774</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">longestWord</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> words<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span>
        words<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
        temp <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        result <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>

        <span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>
            <span class="token keyword">if</span> word<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">in</span> temp<span class="token punctuation">:</span>
                temp<span class="token punctuation">.</span>add<span class="token punctuation">(</span>word<span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">:</span>
                    result <span class="token operator">=</span> word
        <span class="token keyword">return</span> result
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\uC704 \uCF54\uB4DC\uB294 temp\uB97C \uB9AC\uC2A4\uD2B8\uAC00 \uC544\uB2CC set\uC744 \uC0AC\uC6A9\uD55C \uACBD\uC6B0\uC774\uB2E4.<br> \uCCAB \uBC88\uC9F8 \uD480\uC774\uC640 \uD06C\uAC8C \uB2EC\uB77C\uC9C4 \uAC83\uC740 \uC5C6\uC9C0\uB9CC \uCCAB \uBC88\uC9F8 \uD480\uC774\uC758 \uB7F0\uD0C0\uC784\uC740 216ms, \uB450 \uBC88\uC9F8 \uD480\uC774\uC758 \uB7F0\uD0C0\uC784\uC740 116ms\uC774\uB2E4.</p>`,19);function e(p,o){return t}var l=n(a,[["render",e],["__file","lc_720.html.vue"]]);export{l as default};
