import{_ as p,r as t,o as e,c as o,a as n,b as c,F as l,d as s,e as u}from"./app.ab7b14ba.js";const i={},r={id:"\u1107\u1173\u11AF\u1105\u1169\u1100\u1173",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#\u1107\u1173\u11AF\u1105\u1169\u1100\u1173","aria-hidden":"true"},"#",-1),b=s(),m={href:"https://www.acmicpc.net/problem/21921",target:"_blank",rel:"noopener noreferrer"},d=s("\uBE14\uB85C\uADF8"),_=u(`<h3 id="sol1-\u1109\u1175\u1100\u1161\u11AB\u110E\u1169\u1100\u116A" tabindex="-1"><a class="header-anchor" href="#sol1-\u1109\u1175\u1100\u1161\u11AB\u110E\u1169\u1100\u116A" aria-hidden="true">#</a> sol1. \uC2DC\uAC04\uCD08\uACFC</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> sys

<span class="token keyword">def</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># input: N(\uBE14\uB85C\uADF8 \uC77C \uC218), X(\uD2B9\uC815 \uAE30\uAC04)</span>
<span class="token comment"># output: &#39;X\uC77C \uB3D9\uC548 \uAC00\uC7A5 \uB9CE\uC774 \uB4E4\uC5B4\uC628 \uBC29\uBB38\uC790 \uC218&#39;\uC640 &#39;\uD574\uB2F9 \uAE30\uAC04\uC774 \uBA87 \uAC1C\uC778\uC9C0&#39;</span>

<span class="token comment"># X\uAC1C\uC529 \uD569\uC744 \uACC4\uC0B0\uD574\uC11C \uCD5C\uB300\uAC12\uC774 \uBA87\uAC1C\uC778\uC9C0 \uD655\uC778</span>
N<span class="token punctuation">,</span> X <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
views <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># \uAE30\uAC04 \uB0B4 \uCD5C\uB300 \uC870\uD68C\uC218</span>
sum_view_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>N <span class="token operator">-</span> X <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  sum_view_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">(</span>views<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> X<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

max_view <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>sum_view_list<span class="token punctuation">)</span>
cnt <span class="token operator">=</span> sum_view_list<span class="token punctuation">.</span>count<span class="token punctuation">(</span>max_view<span class="token punctuation">)</span>

<span class="token keyword">if</span> max_view <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;SAD&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>max_view<span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>cnt<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h3 id="sol2" tabindex="-1"><a class="header-anchor" href="#sol2" aria-hidden="true">#</a> sol2.</h3><p>\uB9E4\uBC88 \uD569\uACC4\uB97C \uAD6C\uD574\uC8FC\uBA74 \uC2DC\uAC04\uC774 \uB108\uBB34 \uC624\uB798 \uAC78\uB9B0\uB2E4. <br> [i ~ i+X]\uC758 \uD569\uACC4\uB97C \uAD6C\uD55C \uB2E4\uC74C, \uB2E4\uC74C \uAD6C\uAC04\uC758 \uD569\uACC4\uC5D0\uC11C\uB294 [i]\uB97C \uBE7C\uC8FC\uACE0, [i+X+1]\uC744 \uB354\uD574\uC8FC\uBA74 \uADF8\uAC8C [i+1 ~ i+X+1]\uC758 \uD569\uACC4\uC774\uB2E4.<br> \uC774\uB7EC\uD55C \uBC29\uC2DD\uC73C\uB85C \uC9C4\uD589\uD558\uBA74\uC11C \uD569\uACC4\uC911 \uCD5C\uB313\uAC12\uC744 \uC800\uC7A5\uD574\uB450\uACE0, \uCD5C\uB313\uAC12\uC774 \uAC19\uC740 \uACBD\uC6B0 \uCD5C\uB313\uAC12\uC758 \uAC1C\uC218\uB3C4 \uAC19\uC774 \uC99D\uAC00<br></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>
N<span class="token punctuation">,</span> X <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
views <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token builtin">max</span><span class="token punctuation">(</span>views<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;SAD&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
  max_view <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>views<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>X<span class="token punctuation">]</span><span class="token punctuation">)</span>
  value <span class="token operator">=</span> max_view
  cnt <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token punctuation">:</span>
    value <span class="token operator">-=</span> views<span class="token punctuation">[</span>i<span class="token operator">-</span>X<span class="token punctuation">]</span>
    value <span class="token operator">+=</span> views<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">if</span> value <span class="token operator">&gt;</span> max_view<span class="token punctuation">:</span>
      max_view <span class="token operator">=</span> value
      cnt <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">elif</span> value <span class="token operator">==</span> max_view<span class="token punctuation">:</span>
      cnt <span class="token operator">+=</span> <span class="token number">1</span>

  <span class="token keyword">print</span><span class="token punctuation">(</span>max_view<span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>cnt<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,5);function w(v,h){const a=t("ExternalLinkIcon");return e(),o(l,null,[n("h1",r,[k,b,n("a",m,[d,c(a)])]),_],64)}var x=p(i,[["render",w],["__file","boj_21921.html.vue"]]);export{x as default};
