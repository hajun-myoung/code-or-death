import{_ as p,r as t,o as e,c as o,a as n,b as c,F as u,d as s,e as l}from"./app.ab7b14ba.js";const r={},k={id:"\u110B\u1167\u1112\u1162\u11BC\u1100\u1167\u11BC\u1105\u1169",tabindex:"-1"},i=n("a",{class:"header-anchor",href:"#\u110B\u1167\u1112\u1162\u11BC\u1100\u1167\u11BC\u1105\u1169","aria-hidden":"true"},"#",-1),b=s(),d={href:"https://programmers.co.kr/learn/courses/30/lessons/43164",target:"_blank",rel:"noopener noreferrer"},m=s("\uC5EC\uD589\uACBD\uB85C"),y=l(`<p>BFS\uB85C \uD480\uC5B4\uBCF4\uB824\uACE0\uD588\uB294\uB370 \uD14C\uC2A4\uD2B8\uCF00\uC774\uC2A4\uC5D0\uC11C \uD2C0\uB9AC\uB294 \uAC83\uC774 \uC788\uC5C8\uB2E4.<br> \uADF8\uB798\uC11C \uC2A4\uD0DD \uC790\uB8CC\uAD6C\uC870\uB97C \uC774\uC6A9\uD55C DFS\uB85C \uD480\uC774\uD558\uC600\uB2E4.</p><blockquote><p><strong>\u{1F4A1} \uB515\uC154\uB108\uB9AC get \uBA54\uC11C\uB4DC</strong> <br><code>dict.get(key, default=None)</code><br>\uB515\uC154\uB108\uB9AC\uC5D0 key\uAC00 \uC788\uC73C\uBA74 \uD574\uB2F9 key\uC5D0 \uB300\uD55C value\uB97C \uBC18\uD658\uD558\uACE0 key\uAC00 \uC5C6\uC73C\uBA74 default\uC5D0 \uC9C0\uC815\uD55C \uAC12\uC744 \uBC18\uD658 <br>default\uC5D0 \uAC12\uC744 \uC124\uC815\uD558\uC9C0 \uC54A\uC73C\uBA74 \uC544\uBB34\uAC83\uB3C4 \uBC18\uD658\uD558\uC9C0 \uC54A\uC74C</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">solution</span><span class="token punctuation">(</span>tickets<span class="token punctuation">)</span><span class="token punctuation">:</span>
    routes <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span> <span class="token keyword">in</span> tickets<span class="token punctuation">:</span>
        routes<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">=</span> routes<span class="token punctuation">.</span>get<span class="token punctuation">(</span>start<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">[</span>end<span class="token punctuation">]</span>

    <span class="token keyword">for</span> r <span class="token keyword">in</span> routes<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        routes<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;ICN&quot;</span><span class="token punctuation">]</span>
    path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">while</span> stack<span class="token punctuation">:</span>
        top <span class="token operator">=</span> stack<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>

        <span class="token keyword">if</span> top <span class="token keyword">not</span> <span class="token keyword">in</span> routes <span class="token keyword">or</span> <span class="token builtin">len</span><span class="token punctuation">(</span>routes<span class="token punctuation">[</span>top<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>stack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            stack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>routes<span class="token punctuation">[</span>top<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            routes<span class="token punctuation">[</span>top<span class="token punctuation">]</span> <span class="token operator">=</span> routes<span class="token punctuation">[</span>top<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>

    <span class="token keyword">return</span> path<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><br><blockquote><p><strong>\u{1F4A1} <code>defaultdict(default=None)</code></strong> <br>\uB515\uC154\uB108\uB9AC\uC5D0\uC11C \uC874\uC7AC\uD558\uC9C0 \uC54A\uB294 \uD0A4\uB97C \uC870\uD68C\uD560 \uACBD\uC6B0 KeyError exception\uC774 \uBC1C\uC0DD\uD55C\uB2E4. <br>\uD558\uC9C0\uB9CC defaultdict\uC740 \uC874\uC7AC\uD558\uC9C0 \uC54A\uB294 \uD0A4\uB97C \uC870\uD68C\uD558\uBA74 \uC5D0\uB7EC\uAC00 \uB098\uB294 \uAC83\uC774 \uC544\uB2C8\uB77C<br>\uC124\uC815\uD55C \uB514\uD3F4\uD2B8 \uAC12\uC744 \uAE30\uC900\uC73C\uB85C \uD574\uB2F9 \uD0A4\uC5D0 \uB300\uD55C \uC544\uC774\uD15C\uC744 \uB515\uC154\uB108\uB9AC\uC5D0 \uCD94\uAC00\uD574\uC900\uB2E4.</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> collections <span class="token keyword">import</span> defaultdict

<span class="token keyword">def</span> <span class="token function">solution</span><span class="token punctuation">(</span>tickets<span class="token punctuation">)</span><span class="token punctuation">:</span>
    routes <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> start<span class="token punctuation">,</span>end <span class="token keyword">in</span> tickets<span class="token punctuation">:</span>
        routes<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>end<span class="token punctuation">)</span>
    <span class="token keyword">for</span> key <span class="token keyword">in</span> routes<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        routes<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>

    stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;ICN&quot;</span><span class="token punctuation">]</span>
    path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">while</span> stack<span class="token punctuation">:</span>
        top <span class="token operator">=</span> stack<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>

        <span class="token keyword">if</span> routes<span class="token punctuation">[</span>top<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            stack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>routes<span class="token punctuation">[</span>top<span class="token punctuation">]</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>stack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> path<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,6);function h(f,_){const a=t("ExternalLinkIcon");return e(),o(u,null,[n("h1",k,[i,b,n("a",d,[m,c(a)])]),y],64)}var g=p(r,[["render",h],["__file","pg_43164.html.vue"]]);export{g as default};
