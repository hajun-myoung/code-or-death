import{_ as e,r as o,o as c,c as l,a as n,b as p,F as u,d as s,e as t}from"./app.ab7b14ba.js";const r={},i=n("h1",{id:"greedy",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#greedy","aria-hidden":"true"},"#"),s(" greedy")],-1),k=n("h2",{id:"_11508-2-1\u1109\u1166\u110B\u1175\u11AF",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_11508-2-1\u1109\u1166\u110B\u1175\u11AF","aria-hidden":"true"},"#"),s(" 11508 [2+1\uC138\uC77C]")],-1),b={href:"https://www.acmicpc.net/problem/11508",target:"_blank",rel:"noopener noreferrer"},d=s("<\uB9C1\uD06C>"),m=t(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">bj11508</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    n<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    data<span class="token operator">=</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    result<span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">3</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>
        result<span class="token operator">+=</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
bj11508<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><em>&lt;\uD574\uC124&gt;</em></p><p><em>&quot;\uD604\uC7AC \uD53C\uBCF4\uB098\uCE58 \uC218\uB294 \uC804 \uD53C\uBCF4\uB098\uCE58\uC640 \uC804\uC804 \uD53C\uBCF4\uB098\uCE58\uC758 \uC218\uC758 \uD569\uB2C8\uB2E4&quot;\uB77C\uB294 \uB85C\uC9C1\uC744 \uADF8\uB300\uB85C f(n)=f(n-1)+f(-2)\uB85C \uC62E\uACA8\uBCF4\uBA74 return f(n-1)+f(n-2)\uAC00 \uB41C\uB2E4.</em></p><p><em>&lt;\uC608\uC678\uCF00\uC774\uC2A4&gt;0\uBC88\uCA30 \uC218\uC640 1\uBC88\uC9F8 \uC218\uB294 \uC774\uBBF8 \uC544\uB294 \uC0C1\uD0DC\uC5D0\uC11C \uC2DC\uC791\uC744 \uD558\uB294 \uAC83\uC774\uAE30 \uB54C\uBB38\uC5D0 \uBBF8\uB9AC n==0,n==1\uC774\uB77C\uB294 \uC870\uAC74\uC744 \uC8FC\uC5B4\uC57C \uD55C\uB2E4.</em></p><hr><h2 id="_1343-\u1111\u1169\u11AF\u1105\u1175\u110B\u1169\u1106\u1175\u1102\u1169" tabindex="-1"><a class="header-anchor" href="#_1343-\u1111\u1169\u11AF\u1105\u1175\u110B\u1169\u1106\u1175\u1102\u1169" aria-hidden="true">#</a> 1343 [\uD3F4\uB9AC\uC624\uBBF8\uB178]</h2>`,6),h={href:"https://www.acmicpc.net/problem/1343",target:"_blank",rel:"noopener noreferrer"},f=s("<\uB9C1\uD06C>"),_=t(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">bj1343</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    data<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    dotData<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token operator">!=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;X&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token string">&#39;&#39;</span><span class="token punctuation">]</span>
    xData<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token operator">!=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    result<span class="token operator">=</span><span class="token string">&#39;&#39;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>xData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        xlen<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>xData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> xlen<span class="token operator">%</span><span class="token number">2</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        c<span class="token punctuation">,</span>d<span class="token operator">=</span><span class="token builtin">divmod</span><span class="token punctuation">(</span>xlen<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
        e<span class="token punctuation">,</span>f<span class="token operator">=</span><span class="token builtin">divmod</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
        string<span class="token operator">=</span><span class="token string">&#39;AAAA&#39;</span><span class="token operator">*</span>c<span class="token operator">+</span><span class="token string">&#39;BB&#39;</span><span class="token operator">*</span>e
        <span class="token keyword">if</span> data<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            result<span class="token operator">+=</span>dotData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>string
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            result<span class="token operator">+=</span>string<span class="token operator">+</span>dotData<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>dotData<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">==</span><span class="token builtin">len</span><span class="token punctuation">(</span>xData<span class="token punctuation">)</span><span class="token punctuation">:</span>
        result<span class="token operator">=</span>result<span class="token operator">+</span>dotData<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
bj1343<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p><em>&lt;\uD574\uC124&gt;</em></p><p><em>&quot;\uD604\uC7AC \uD53C\uBCF4\uB098\uCE58 \uC218\uB294 \uC804 \uD53C\uBCF4\uB098\uCE58\uC640 \uC804\uC804 \uD53C\uBCF4\uB098\uCE58\uC758 \uC218\uC758 \uD569\uB2C8\uB2E4&quot;\uB77C\uB294 \uB85C\uC9C1\uC744 \uADF8\uB300\uB85C f(n)=f(n-1)+f(-2)\uB85C \uC62E\uACA8\uBCF4\uBA74 return f(n-1)+f(n-2)\uAC00 \uB41C\uB2E4.</em></p><p><em>&lt;\uC608\uC678\uCF00\uC774\uC2A4&gt;0\uBC88\uCA30 \uC218\uC640 1\uBC88\uC9F8 \uC218\uB294 \uC774\uBBF8 \uC544\uB294 \uC0C1\uD0DC\uC5D0\uC11C \uC2DC\uC791\uC744 \uD558\uB294 \uAC83\uC774\uAE30 \uB54C\uBB38\uC5D0 \uBBF8\uB9AC n==0,n==1\uC774\uB77C\uB294 \uC870\uAC74\uC744 \uC8FC\uC5B4\uC57C \uD55C\uB2E4.</em></p><hr>`,5);function g(y,w){const a=o("ExternalLinkIcon");return c(),l(u,null,[i,k,n("blockquote",null,[n("p",null,[n("a",b,[d,p(a)])])]),m,n("blockquote",null,[n("p",null,[n("a",h,[f,p(a)])])]),_],64)}var v=e(r,[["render",g],["__file","greedy.html.vue"]]);export{v as default};
