import{_ as e,r as p,o as t,c as o,a as n,b as c,F as l,d as s,e as r}from"./app.ab7b14ba.js";const u={},i={id:"valid-parentheses",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#valid-parentheses","aria-hidden":"true"},"#",-1),d=s(),b={href:"https://leetcode.com/problems/valid-parentheses/",target:"_blank",rel:"noopener noreferrer"},m=s("Valid-parentheses"),_=r(`<p>(, [, { \uB294 stack\uC5D0 push, \uADF8 \uBC18\uB300 \uBC29\uD5A5 \uAE30\uD638\uB4E4\uC740 pop\uD55C\uB2E4.<br> ), ], } \uC778\uB370 stack\uC774 \uBE44\uC5B4\uC788\uAC70\uB098 stack.pop()\uC774 \uD574\uB2F9 \uAE30\uD638\uC758 \uBC18\uB300 \uAE30\uD638\uAC00 \uC544\uB2C8\uB77C\uBA74 False\uB97C return\uD558\uAC8C \uD55C\uB2E4.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">isValid</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
        stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        bracket <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;)&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;(&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;}&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;{&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;]&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;[&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">for</span> char <span class="token keyword">in</span> s<span class="token punctuation">:</span>
            <span class="token keyword">if</span> char <span class="token keyword">not</span> <span class="token keyword">in</span> bracket<span class="token punctuation">:</span>
                stack<span class="token punctuation">.</span>append<span class="token punctuation">(</span>char<span class="token punctuation">)</span>
            <span class="token keyword">elif</span> <span class="token keyword">not</span> stack <span class="token keyword">or</span> bracket<span class="token punctuation">[</span>char<span class="token punctuation">]</span> <span class="token operator">!=</span> stack<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">False</span>
        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,2);function h(f,y){const a=p("ExternalLinkIcon");return t(),o(l,null,[n("h1",i,[k,d,n("a",b,[m,c(a)])]),_],64)}var w=e(u,[["render",h],["__file","leet_20.html.vue"]]);export{w as default};
