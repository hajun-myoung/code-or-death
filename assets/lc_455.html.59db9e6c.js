import{_ as n,e as s}from"./app.ab7b14ba.js";const a={},e=s(`<h1 id="_455-assign-cookies" tabindex="-1"><a class="header-anchor" href="#_455-assign-cookies" aria-hidden="true">#</a> 455. Assign Cookies</h1><blockquote><p>\uADF8\uB9AC\uB514</p></blockquote><h2 id="\u{1F4CB}-\u1106\u116E\u11AB\u110C\u1166" tabindex="-1"><a class="header-anchor" href="#\u{1F4CB}-\u1106\u116E\u11AB\u110C\u1166" aria-hidden="true">#</a> \u{1F4CB} \uBB38\uC81C</h2><p>Assume you are an awesome parent and want to give your children some cookies.<br> But, you should give each child at most one cookie.</p><p>Each child i has a greed factor g[i], which is the minimum size of a cookie that the child will be content with; and each cookie j has a size s[j].<br> If s[j] &gt;= g[i], we can assign the cookie j to the child i, and the child i will be content.<br> Your goal is to maximize the number of your content children and output the maximum number.</p><h2 id="\u{1F449}-\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8" tabindex="-1"><a class="header-anchor" href="#\u{1F449}-\u110B\u1175\u11B8\u110E\u116E\u11AF\u1105\u1167\u11A8" aria-hidden="true">#</a> \u{1F449} \uC785\uCD9C\uB825</h2><p><strong>Example 1:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: g = [1,2,3], s = [1,1]
Output: 1
Explanation: You have 3 children and 2 cookies.
The greed factors of 3 children are 1, 2, 3.
And even though you have 2 cookies, since their size is both 1,
you could only make the child whose greed factor is 1 content.
You need to output 1.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>Example 2:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: g = [1,2], s = [1,2,3]
Output: 2
Explanation: You have 2 children and 3 cookies.
The greed factors of 2 children are 1, 2.
You have 3 cookies and their sizes are big enough to gratify all of the children,
You need to output 2.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u{1F4DD}-\u1111\u116E\u11AF\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#\u{1F4DD}-\u1111\u116E\u11AF\u110B\u1175" aria-hidden="true">#</a> \u{1F4DD} \uD480\uC774</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">findContentChildren</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> g<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        g<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
        s<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>

        count <span class="token operator">=</span> <span class="token number">0</span>
        i <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span> <span class="token keyword">and</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> g<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>
                count <span class="token operator">+=</span> <span class="token number">1</span>
                i <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">return</span> count
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\uBA3C\uC800 \uC544\uC774\uAC00 \uD544\uC694\uD55C \uCFE0\uD0A4\uC758 \uC591\uC5D0 \uCD5C\uB300\uD55C \uB9DE\uCD94\uAE30 \uC704\uD574 \uC778\uC790\uB85C \uC8FC\uC5B4\uC9C4 \uB450 \uB9AC\uC2A4\uD2B8 g\uC640 s\uB97C \uC624\uB984\uCC28\uC21C\uC73C\uB85C \uC815\uB82C\uD588\uB2E4.<br> \uADF8\uB9AC\uACE0 \uAC00\uC9C0\uACE0 \uC788\uB294 \uCFE0\uD0A4 \uB9AC\uC2A4\uD2B8\uC778 s\uB97C \uC21C\uD68C\uD558\uBA70 g\uC640 \uBE44\uAD50\uD574 \uB098\uAC04\uB2E4.</p><p>\uB9CC\uC57D g[i]\uAC00 g\uC758 \uBC94\uC704 \uC548\uC5D0 \uC788\uACE0 \uCFE0\uD0A4\uB97C \uC904 \uC218 \uC788\uB294 \uACBD\uC6B0\uB77C\uBA74 count\uC5D0 1\uC744 \uB354\uD558\uACE0 \uB2E4\uC74C \uC544\uC774\uAC00 \uC6D0\uD558\uB294 \uCFE0\uD0A4\uC758 \uC591\uC744 \uC0B4\uD540\uB2E4.<br> \uC774 \uACBD\uC6B0\uAC00 \uBC14\uB85C \uCFE0\uD0A4\uB97C \uC544\uC774\uC5D0\uAC8C \uC904 \uC218 \uC788\uB294 \uACBD\uC6B0\uC774\uB2E4.</p><p>\uC774 \uACBD\uC6B0\uC5D0 \uD574\uB2F9\uD558\uC9C0 \uC54A\uB294\uB2E4\uBA74 \uCFE0\uD0A4\uB97C \uC904 \uC218 \uC5C6\uC73C\uB2C8 \uB118\uC5B4\uAC04\uB2E4.</p>`,15);function t(p,o){return e}var i=n(a,[["render",t],["__file","lc_455.html.vue"]]);export{i as default};
