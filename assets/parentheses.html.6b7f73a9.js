import{_ as n,e as s}from"./app.ab7b14ba.js";const a={},p=s(`<h1 id="generate-parentheses" tabindex="-1"><a class="header-anchor" href="#generate-parentheses" aria-hidden="true">#</a> Generate Parentheses</h1><blockquote><p>Parentheses\uB780 &quot;\uAD04\uD638&quot;\uB85C, \uC8FC\uC5B4\uC9C4 \uC815\uC218 \uB9CC\uD07C\uC758 \uC30D\uC73C\uB85C \uC774\uB8E8\uC5B4\uC9C4 \uAD04\uD638\uB4E4\uC744 \uB9CC\uB4DC\uB294 \uBB38\uC81C\uC774\uB2E4</p></blockquote><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><h3 id="input" tabindex="-1"><a class="header-anchor" href="#input" aria-hidden="true">#</a> Input</h3><ul><li><p>Inteager Number</p></li><li><p>3</p></li></ul><h3 id="expected-output" tabindex="-1"><a class="header-anchor" href="#expected-output" aria-hidden="true">#</a> Expected Output</h3><ul><li><p>All valid parantheses</p></li><li><p>[&#39;((()))&#39;, &#39;(()())&#39;, &#39;(())()&#39;, &#39;()(())&#39;, &#39;()()()&#39;]</p></li></ul><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">generateParenthesis</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">def</span> <span class="token function">createSequence</span><span class="token punctuation">(</span>A <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">*</span>n <span class="token punctuation">:</span>
                <span class="token keyword">if</span> isValid<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">:</span>
                    result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                A<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;(&#39;</span><span class="token punctuation">)</span>
                createSequence<span class="token punctuation">(</span>A<span class="token punctuation">)</span>
                A<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
                A<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>
                createSequence<span class="token punctuation">(</span>A<span class="token punctuation">)</span>
                A<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
        
        <span class="token keyword">def</span> <span class="token function">isValid</span><span class="token punctuation">(</span>myArr<span class="token punctuation">)</span><span class="token punctuation">:</span>
            check <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">for</span> c <span class="token keyword">in</span> myArr<span class="token punctuation">:</span>
                <span class="token keyword">if</span> c <span class="token operator">==</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">:</span>
                    check <span class="token operator">+=</span> <span class="token number">1</span>
                <span class="token keyword">else</span> <span class="token punctuation">:</span>
                    check <span class="token operator">-=</span> <span class="token number">1</span>
                <span class="token keyword">if</span> check <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token boolean">False</span>
            <span class="token keyword">return</span> check <span class="token operator">==</span> <span class="token number">0</span>
        
        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        createSequence<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> result
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="idea" tabindex="-1"><a class="header-anchor" href="#idea" aria-hidden="true">#</a> Idea</h2><ul><li><p>\uAC01 \uAD04\uD638\uB4E4(&quot;(&quot;, &quot;)&quot;)\uB85C \uC774\uB8E8\uC5B4\uC9C4 \uBAA8\uB4E0 \uBC30\uC5F4\uC744 \uB9CC\uB4E0 \uD6C4, \uC720\uD6A8\uD55C\uC9C0 \uAC80\uC0AC\uD55C\uB2E4</p><ul><li>\uBAA8\uB4E0 \uACBD\uC6B0\uC758 \uC218 \uC0DD\uC131\uC740 <strong>\uC7AC\uADC0</strong>\uB85C \uCC98\uB9AC\uD55C\uB2E4</li></ul></li></ul><h2 id="code-destructing" tabindex="-1"><a class="header-anchor" href="#code-destructing" aria-hidden="true">#</a> Code destructing</h2><h3 id="final-step-of-recursion" tabindex="-1"><a class="header-anchor" href="#final-step-of-recursion" aria-hidden="true">#</a> Final step of Recursion</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">*</span>n <span class="token punctuation">:</span>
    <span class="token keyword">if</span> isValid<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">:</span>
        result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\uC7AC\uADC0\uB85C \uD638\uCD9C\uB420 \uD568\uC218\uC774\uBBC0\uB85C, <em>\uB9C8\uC9C0\uB9C9</em>\uC744 \uBBF8\uB9AC \uC815\uD55C\uB2E4<br> \uD558\uB098\uC758 \uACBD\uC6B0\uC5D0 \uD574\uB2F9\uD560 \uBC30\uC5F4 \uB0B4\uC6A9\uC774 2*n\uAC1C\uC758 \uAE38\uC774\uB77C\uBA74, \uBC30\uC5F4\uC774 \uC644\uC131\uB41C \uAC83\uC774\uBBC0\uB85C \uC720\uD6A8\uC131 \uAC80\uC0AC\uB97C \uC9C4\uD589\uD55C\uB2E4</p><h3 id="progressing-recursion" tabindex="-1"><a class="header-anchor" href="#progressing-recursion" aria-hidden="true">#</a> Progressing Recursion</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">else</span><span class="token punctuation">:</span>
    A<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;(&#39;</span><span class="token punctuation">)</span>
    createSequence<span class="token punctuation">(</span>A<span class="token punctuation">)</span>
    A<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
    A<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>
    createSequence<span class="token punctuation">(</span>A<span class="token punctuation">)</span>
    A<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><p>\uBC30\uC5F4\uC5D0 \uC5EC\uB294\uAD04\uD638(&quot;(&quot;)\uB97C \uB123\uACE0, \uC2A4\uC2A4\uB85C\uB97C \uD638\uCD9C\uD55C\uB2E4</p></li><li><p>\uB9C8\uC9C0\uB9C9 \uC694\uC18C\uB97C \uC81C\uAC70\uD558\uACE0, \uB2EB\uB294\uAD04\uD638\uB97C \uB123\uACE0, \uB2E4\uC2DC \uC2A4\uC2A4\uB85C\uB97C \uD638\uCD9C\uD55C\uB2E4</p></li><li><p>\uB9C8\uC9C0\uB9C9 \uC694\uC18C\uB97C \uC81C\uAC70\uD55C\uB2E4</p></li></ul><p>\uC774 \uACFC\uC815\uC744 \uC7AC\uADC0\uC801\uC73C\uB85C \uBC18\uBCF5\uD558\uBA74, &quot;\uBAA8\uB4E0 \uACBD\uC6B0\uC758 \uC218&quot;\uB97C \uC0DD\uC131\uD560 \uC218 \uC788\uB2E4</p><h3 id="isvalid" tabindex="-1"><a class="header-anchor" href="#isvalid" aria-hidden="true">#</a> isValid</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">isValid</span><span class="token punctuation">(</span>myArr<span class="token punctuation">)</span><span class="token punctuation">:</span>
    check <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> c <span class="token keyword">in</span> myArr<span class="token punctuation">:</span>
        <span class="token keyword">if</span> c <span class="token operator">==</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">:</span>
            check <span class="token operator">+=</span> <span class="token number">1</span>
        <span class="token keyword">else</span> <span class="token punctuation">:</span>
            check <span class="token operator">-=</span> <span class="token number">1</span>
        <span class="token keyword">if</span> check <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">return</span> check <span class="token operator">==</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li><p>\uC5EC\uB294\uAD04\uD638\uB97C \uCC3E\uC73C\uBA74, check\uB97C 1 \uC99D\uAC00\uC2DC\uD0A8\uB2E4</p></li><li><p>\uB2EB\uB294\uAD04\uD638\uB97C \uCC3E\uC73C\uBA74, check\uB97C 1 \uAC10\uC18C\uC2DC\uD0A8\uB2E4</p></li><li><p>check\uAC00 \uCD5C\uC885\uC801\uC73C\uB85C 0\uC774\uC5B4\uC57C \uC21C\uC11C\uC30D\uC774 \uD615\uC131\uB418\uC5C8\uB294 \uAC83\uC774\uB2E4</p></li><li><p>for loop\uB97C \uBC18\uBCF5\uD558\uB294 \uC911\uC5D0 check\uAC00 0\uBCF4\uB2E4 \uC791\uC544\uC9C0\uBA74, \uBD88\uAC00\uB2A5\uD55C \uACBD\uC6B0\uC774\uB2E4 (\uAD04\uD638\uB97C \uC5F4\uC9C0 \uC54A\uC558\uB294\uB370 \uB2EB\uC74C)</p></li></ul><h2 id="code-review" tabindex="-1"><a class="header-anchor" href="#code-review" aria-hidden="true">#</a> Code Review</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">generateParenthesis</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">def</span> <span class="token function">createSequence</span><span class="token punctuation">(</span>A <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">*</span>n <span class="token punctuation">:</span>
                <span class="token keyword">if</span> isValid<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">:</span>
                    result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                A<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;(&#39;</span><span class="token punctuation">)</span>
                createSequence<span class="token punctuation">(</span>A<span class="token punctuation">)</span>
                A<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
                A<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>
                createSequence<span class="token punctuation">(</span>A<span class="token punctuation">)</span>
                A<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>
        
        <span class="token keyword">def</span> <span class="token function">isValid</span><span class="token punctuation">(</span>myArr<span class="token punctuation">)</span><span class="token punctuation">:</span>
            check <span class="token operator">=</span> <span class="token number">0</span>
            <span class="token keyword">for</span> c <span class="token keyword">in</span> myArr<span class="token punctuation">:</span>
                <span class="token keyword">if</span> c <span class="token operator">==</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">:</span>
                    check <span class="token operator">+=</span> <span class="token number">1</span>
                <span class="token keyword">else</span> <span class="token punctuation">:</span>
                    check <span class="token operator">-=</span> <span class="token number">1</span>
                <span class="token keyword">if</span> check <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token boolean">False</span>
            <span class="token keyword">return</span> check <span class="token operator">==</span> <span class="token number">0</span>
        
        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        createSequence<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> result
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\uB2E4\uC74C\uACFC \uAC19\uC774 \uD568\uC218\uB97C \uD638\uCE28\uD588\uB2E4\uACE0 \uAC00\uC815\uD558\uC790:</p><div class="language-text ext-text"><pre class="language-text"><code>createSequence([], 1)
</code></pre></div><p>n == 1 \uC774\uBBC0\uB85C, \uBC30\uC5F4\uC758 \uAE38\uC774\uAC00 2\uAC00 \uB3FC\uC57C \uC720\uD6A8\uC131 \uAC80\uC0AC\uAC00 \uC2DC\uC791\uB41C\uB2E4. \uADF8 \uC804\uAE4C\uC9C0:</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">## Depth 1</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">]</span> <span class="token comment"># \uC5EC\uB294 \uAD04\uD638\uB97C \uB123\uACE0, \uC7AC\uADC0\uD638\uCD9C</span>

<span class="token comment">## Depth 2</span>
<span class="token comment"># \uAE38\uC774\uAC00 1\uC784 - \uC720\uD6A8\uC131 \uAC80\uC0AC X</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">]</span> <span class="token comment"># \uC5EC\uB294 \uAD04\uD638\uB97C \uB123\uACE0, \uC7AC\uADC0\uD638\uCD9C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>n == 2 \uBD80\uD130, \uC720\uD6A8\uC131 \uAC80\uC0AC\uAC00 \uC9C4\uD589\uB41C\uB2E4</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment">## Depth 3</span>
A <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">]</span> <span class="token comment"># \uC720\uD6A8\uC131 \uAC80\uC0AC \uACB0\uACFC, check == 2 \uB85C, check == 0\uC5D0 \uC758\uD574 False\uAC00 \uBC18\uD658\uB428</span>

<span class="token comment">## Depth 2</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">]</span> <span class="token comment"># A.pop() \uC5D0 \uC758\uD574 \uB9C8\uC9C0\uB9C9 \uC694\uC18C\uAC00 \uC9C0\uC6CC\uC9D0</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span> <span class="token comment"># \uB2EB\uB294\uAD04\uD638\uB97C \uCD94\uAC00\uD558\uACE0, \uC7AC\uADC0\uD638\uCD9C</span>

<span class="token comment">## Depth 3</span>
A <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span> <span class="token comment"># True</span>
result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;()&quot;</span><span class="token punctuation">]</span> <span class="token comment"># &quot;&quot;.join(A)\uAC00 \uBC30\uC5F4 A\uB97C \uBB38\uC790\uC5F4\uB85C \uB9CC\uB4E6</span>

<span class="token comment">## Depth 2</span>
A <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">]</span> <span class="token comment"># A.pop()</span>

<span class="token comment">## Depth 1</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># A.pop()</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span> <span class="token comment"># A.append(&quot;)&quot;)</span>

<span class="token comment">## Depth 2</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">]</span>

<span class="token comment">## Depth 3</span>
check <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token comment"># False, \uB2EB\uB294 \uAD04\uD638\uB85C \uC2DC\uC791\uD574 check\uAC00 \uC74C\uC218\uAC00 \uB428</span>

<span class="token comment">## Depth 2</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span>

<span class="token comment">## Depth 3</span>
<span class="token comment"># False</span>

<span class="token comment"># Depth 2</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">]</span>

<span class="token comment"># Depth 1</span>
A <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>n == 1 \uC5D0\uC11C, \uC704\uC640 \uAC19\uC740 \uACFC\uC815\uC744 \uAC70\uCCD0 <code>((</code>, <code>()</code>, <code>)(</code>, <code>))</code> \uC758 \uBAA8\uB4E0 \uACBD\uC6B0\uB97C \uAC80\uC0AC\uD558\uAC8C \uB41C\uB2E4</p><h3 id="summary" tabindex="-1"><a class="header-anchor" href="#summary" aria-hidden="true">#</a> Summary</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token string">&#39;(&#39;</span><span class="token punctuation">]</span> <span class="token comment"># Depth 1</span>
<span class="token punctuation">[</span><span class="token string">&#39;(&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;(&#39;</span><span class="token punctuation">]</span> <span class="token comment"># Depth 2</span>
<span class="token punctuation">[</span><span class="token string">&#39;(&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">]</span> <span class="token comment"># Depth 2</span>
<span class="token comment"># valid:  [&#39;(&#39;, &#39;)&#39;]</span>
<span class="token punctuation">[</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">]</span> <span class="token comment"># Depth 1</span>
<span class="token punctuation">[</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;(&#39;</span><span class="token punctuation">]</span> <span class="token comment"># Depth 2</span>
<span class="token punctuation">[</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">]</span> <span class="token comment"># Depth 2</span>
<span class="token comment"># result : [&#39;()&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,33);function e(t,o){return p}var l=n(a,[["render",e],["__file","parentheses.html.vue"]]);export{l as default};
